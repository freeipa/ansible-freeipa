---
parameters:
  - name: distro
    type: string
    default: fedora-latest
  - name: ansible_version
    type: string
    default: ""
  - name: python_version
    type: string
    default: 3.x
  - name: build_number
    type: string

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '${{ parameters.python_version }}'

  - script: |
      pip install "ansible${{ parameters.ansible_version }}" -r requirements-tests.txt
      pip install podman-compose
      pip install git+https://github.com/rjeffman/ipalab-config@main
    retryCountOnTaskFailure: 5
    displayName: Install test dependencies

  - script: ansible-galaxy collection install -r requirements-podman.yml
    retryCountOnTaskFailure: 5
    displayName: Install Ansible collections

  # Deployment of IPA servers/clients is done through the collection
  - script: |
      git fetch --unshallow
      utils/build-galaxy-release.sh -i
    retryCountOnTaskFailure: 5
    displayName: Build Galaxy release - Temp

  - script: cat infra/scenarios/ipa-ad-trust.yml
    displayName: Show configuration - Debug

  - script: |
      infra/scenarios/start-scenario -D infra/scenarios/ipa-ad-trust.yml
      # workaround for 'sudo'
      podman exec addc chmod u+r /etc/shadow
      podman exec server chmod u+r /etc/shadow
      podman exec cli01 chmod u+r /etc/shadow
      # Deploy nodes
      ansible-playbook -i ansible-freeipa-scenario/inventory.yml ansible-freeipa-scenario/playbooks/deploy_*.yml ||:
      ansible-playbook -i ansible-freeipa-scenario/inventory.yml ansible-freeipa-scenario/playbooks/install-cluster.yml || exit 1
      ansible-playbook -i ansible-freeipa-scenario/inventory.yml ansible-freeipa-scenario/playbooks/config_*.yml ||:
    displayName: Prepare testing scenario
